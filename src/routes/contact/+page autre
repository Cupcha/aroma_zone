<!-- install npm i -D carbon-components-svelte --> 
<!-- npm install svelte-forms-lib -->
<!-- npm install yup --> 


<script>
  import supabase from "../supabase.js";
  import { createForm } from "svelte-forms-lib";
  import * as yup from "yup";

  import { TextInput, TextArea, Button, FormGroup, Form, InlineNotification } from "carbon-components-svelte";

  const validationSchema = yup.object().shape({
      name: yup.string().required('Please enter a name'),
      email: yup.string().email().required('Please enter a valid email'),
      message: yup.string().required('Please enter a message')
  });

  let apiResult = null;

  const { form, errors, handleChange, handleSubmit, isSubmitting, handleReset } = createForm({
      initialValues: { name: "", email: "", message: "" },
      validationSchema: validationSchema,
      onSubmit: async values => {

          try {
              var result = await supabase.from("Contact").insert(values);

              if (result.data != null) {
                  apiResult = true;
              } else {
                  apiResult = false;
              }

          } catch (ex) {
              apiResult = false;
          }

          handleReset();
    }
  });
  
  </script>


<template>
    <div class="flex flex-col items-center justify-center h-screen bg-gray-100">
      <h1 class="text-4xl font-bold mb-8">Contactez nous !</h1>
      <form class="w-full max-w-md bg-white rounded-lg shadow-md p-8">
        <div class="mb-4">
          <label class="block text-gray-700 font-bold mb-2" for="name">
            Name
          </label>
          <input
            class="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="name"
            type="text"
            placeholder="John Doe"
            bind:value={name}
          />
        </div>
        <div class="mb-4">
          <label class="block text-gray-700 font-bold mb-2" for="email">
            Email
          </label>
          <input
            class="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="email"
            type="email"
            placeholder="johndoe@example.com"
            bind:value={email}
          />
        </div>
        <div class="mb-8">
          <label class="block text-gray-700 font-bold mb-2" for="message">
            Message
          </label>
          <textarea
            class="appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
            id="message"
            rows="5"
            placeholder="Enter your message here"
            bind:value={message}
          ></textarea>
        </div>
        <div class="flex items-center justify-between">
          <button
            class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
            on:click={handleSubmit}
          >
            Submit
          </button>
          <div class="text-sm text-gray-500">
            {status}
          </div>
        </div>
      </form>
    </div>
  </template>
  
  
  
